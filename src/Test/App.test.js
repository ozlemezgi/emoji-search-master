import React from "react";
import ReactDOM from "react-dom";
import App from "../App";
import { render, screen ,fireEvent } from "@testing-library/react";
import "@testing-library/jest-dom/extend-expect";
import "@testing-library/jest-dom";



describe("Emoji Search Master Testleri", () => {

  beforeEach(() => {
    render(<App />);
  });

  test("Header render ", () => {
    let header;
    //Emoji Search metni iÃ§eren element header deÄŸiÅŸkenine atandÄ±
    header = screen.getByText("Emoji Search");
    //header deÄŸiÅŸkeninin sayfada bulunmasÄ± durumu kontrol edildi
    expect(header).toBeInTheDocument();
  });

  test("Proje ilk Ã§alÄ±ÅŸtÄ±ÄŸÄ±nda listenin kontrolÃ¼", () => {
    //Click to copy emoji elementini clickToCopy deÄŸiÅŸkenine atandÄ± 
    const clickToCopy = screen.getAllByText("Click to copy emoji");
    //clickToCopy'nin 20 kez bulunup bulunmadÄ±ÄŸÄ± kontrol edildi;
    expect(clickToCopy).toHaveLength(20);
  });

  test("emoji arama",()=>{
    //textbox deÄŸeri alÄ±ndÄ± 
     const input = screen.getByRole("textbox");
     //textbox deÄŸeri 100 ile deÄŸiÅŸtirildi.
     fireEvent.change(input, { target: { value: "100" } });
    //100 metnini iÃ§eren 1 elementin olup olmama durumu kontrol edildi
     expect(screen.getAllByText(/100/i)).toHaveLength(1);

  })

   test("emoji kopyalama", () => {
     let Emoji;
     Emoji = screen.getByText("100") ;
     // Emoji elementine tÄ±klanÄ±ldÄ±
     fireEvent.click(Emoji);
     //kopyalÄ±nan emoji ile beklenen emoji aynÄ± mÄ± kontrol edildi
     expect(Emoji.parentElement.getAttribute("data-clipboard-text")).toMatch("ğŸ’¯");
   });

});



